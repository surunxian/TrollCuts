name: iOS Build

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    env:
      APPLICATION_NAME: TrollCuts
      CONFIGURATION: Release

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby (for ldid if needed)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'

      - name: Install ldid
        run: |
          brew install ldid

      - name: Install Xcode Command Line Tools
        run: |
          sudo xcode-select -s /Applications/Xcode.app/Contents/Developer

      - name: Build iOS app
        run: |
          set -e
          cd $GITHUB_WORKSPACE

          WORKING_LOCATION="$GITHUB_WORKSPACE"
          rm -rf build
          mkdir -p build
          cd build

          if [ -e "$APPLICATION_NAME.tipa" ]; then
              rm $APPLICATION_NAME.tipa
          fi

          # Build .app
          xcodebuild -project "$WORKING_LOCATION/$APPLICATION_NAME.xcodeproj" \
              -scheme "$APPLICATION_NAME" \
              -configuration "$CONFIGURATION" \
              -derivedDataPath "$WORKING_LOCATION/build/DerivedData" \
              -destination 'generic/platform=iOS' \
              ONLY_ACTIVE_ARCH="NO" \
              CODE_SIGNING_ALLOWED="NO"

          DD_APP_PATH="$WORKING_LOCATION/build/DerivedData/Build/Products/$CONFIGURATION-iphoneos/$APPLICATION_NAME.app"
          TARGET_APP="$WORKING_LOCATION/build/$APPLICATION_NAME.app"
          cp -r "$DD_APP_PATH" "$TARGET_APP"

          # Remove signature
          codesign --remove "$TARGET_APP"
          rm -rf "$TARGET_APP/_CodeSignature"
          rm -rf "$TARGET_APP/embedded.mobileprovision"

          # Add entitlements
          echo "Adding entitlements"
          ldid -S"$WORKING_LOCATION/entitlements.plist" "$TARGET_APP/$APPLICATION_NAME"

          # Package .ipa
          rm -rf Payload
          mkdir Payload
          cp -r $APPLICATION_NAME.app Payload/$APPLICATION_NAME.app
          zip -vr $APPLICATION_NAME.tipa Payload
          rm -rf $APPLICATION_NAME.app
          rm -rf Payload

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APPLICATION_NAME }}.tipa
          path: build/${{ env.APPLICATION_NAME }}.tipa
